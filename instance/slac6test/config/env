#!/bin/bash

#set -x

# This instance-specific script is supposed to be sourced from the Qserv
# management scripts in order to set up proper values of the corresponding
# parameters.

CORE_DUMPS=/var/lib/systemd/coredump

# -----------------
# ----- Qserv -----
# -----------------

# 10.6.8 + updated SciSQL
QSERV_DB_IMAGE_TAG="qserv/lite-mariadb:2022.7.1-rc1-21-g292b0f1ea"

# 2023-04-12: The latest production version installed to test "zombi"
#             worker queries.
#
# QSERV_IMAGE_TAG="qserv/lite-qserv:2023.4.1-rc1"

# 2023-05-01: Based on DM-38069 that was rebased against DM-38909 (an attempt
#             to fix the query cancellaton problem that exists in "main").
#             Note that DM-38909 is based on "main".
#
# 2023-05-01: Also instrumented mysql::MySQLConnection::cancel() to report
#             progress of the operation to ensure the method get's called
#             and it actually does someting.

QSERV_IMAGE_TAG="qserv/lite-qserv:2023.4.1-rc1-36-g6a566e32c-dirty"

QSERV_BASE_DIR="/zfspool/qserv-test"
QSERV_CZAR_DB_PORT=3308
QSERV_WORKER_DB_PORT=3368

# -------------------------------------
# ----- Replication/Ingest system -----
# -------------------------------------

# 10.6.5
REPL_DB_IMAGE_TAG="qserv/lite-mariadb:2022.1.1-rc1"

# 2023-04-20: The latest production version
#
REPL_IMAGE_TAG="qserv/lite-qserv:2023.4.1-rc1"

REPL_INSTANCE_ID="slac6test"
REPL_DB_PORT=23308
REPL_CONTR_HTTP_PORT=25881
REPL_REG_PORT=25882
REPL_REG_PARAMETERS="--registry-port=${REPL_REG_PORT} --debug"
# Extended Controller timeouts to allow long operation when ingesting
# large catalogs:
#   request timeout: 8 hours
#   job timeout: 24 hours
# --controller-num-director-index-connections=4
QSERV_XROOTD_PORT=1894
REPL_CONTR_PARAMETERS="--registry-port=${REPL_REG_PORT} --xrootd-port=${QSERV_XROOTD_PORT} --controller-http-server-port=${REPL_CONTR_HTTP_PORT} --http-root=/usr/local/qserv/www/ --worker-evict-timeout=3600 --health-probe-interval=120 --replication-interval=600 --qserv-sync-timeout=600 --do-not-create-folders --controller-ingest-job-monitor-ival-sec=1 --controller-request-timeout-sec=28800 --controller-job-timeout-sec=86400 --debug"
REPL_WORKER_SVC_PORT=25800
REPL_WORKER_FS_PORT=25801
REPL_WORKER_LOADER_PORT=25802
REPL_WORKER_EXPORTER_PORT=25803
REPL_WORKER_HTTP_LOADER_PORT=25804
REPL_WORKER_PARAMETERS="--registry-port=${REPL_REG_PORT} --worker-svc-port=${REPL_WORKER_SVC_PORT} --worker-fs-port=${REPL_WORKER_FS_PORT} --worker-loader-port=${REPL_WORKER_LOADER_PORT} --worker-exporter-port=${REPL_WORKER_EXPORTER_PORT} --worker-http-loader-port=${REPL_WORKER_HTTP_LOADER_PORT} --worker-ingest-num-retries=4 --schema-upgrade-wait=1 --schema-upgrade-wait-timeout=600 --do-not-create-folders --debug"

# To mount the local (ouside the container) version of the Web dashboard
# and other Web apps served by the HTTP server of the Master Controller 
# REPL_HTTP_ROOT="/zfspool/management/qserv/src/www"

# Limit size of the replication containers by 100 GB
# This is needed for ingesting (very) large numbers of contributions.
REPL_MEMORY_LIMIT=107374182400

# ----- Common parameters

# User account under which the containers will be run.
#
# % id rubinqsv
#   uid=45386(rubinqsv) gid=1126(gu) groups=1126(gu)
#
CONTAINER_UID=45386
CONTAINER_GID=1126


CONTAINER_NAME_PREFIX="qserv-test-"

# 10 GB
ULIMIT_MEMLOCK=1099511627776

# Other parameters are set by the following script based on the above defined
# one, or be loaded from predefined locations.
. $(dirname "$0")/common

