# disable LSST logging at XROOTD
docker exec -it qserv-6 bash -c 'sed -i "s/logfile=@libXrdSsiLog.so/logfile=\/qserv\/run\/var\/log\/\$\{prog\}-raw.log/" /qserv/run/etc/init.d/xrootd'
docker exec -it qserv-6 bash -c 'cat /qserv/run/etc/init.d/xrootd | grep "logfile="'
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/logfile=@libXrdSsiLog.so/logfile=\/qserv\/run\/var\/log\/\$\{prog\}-raw.log/' /qserv/run/etc/init.d/xrootd\""
    ssh -n $h "docker exec -i qserv-6 bash -c \"cat /qserv/run/etc/init.d/xrootd | grep 'logfile='\""
done

## Enabling XRD debugging in the worker's log file
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/^export XRD_LOGLEVEL=Debug/#export XRD_LOGLEVEL=Debug/' /qserv/run/etc/sysconfig/qserv\"";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/^unset XRDSSIDEBUG/#unset XRDSSIDEBUG/' /qserv/run/etc/sysconfig/qserv\"";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/^#export XRDSSIDEBUG=0/export XRDSSIDEBUG=0/' /qserv/run/etc/sysconfig/qserv\"";
    ssh -n $h "docker exec -i qserv-6 bash -c \"cat /qserv/run/etc/sysconfig/qserv | egrep 'XRD_LOGLEVEL|XRDSSIDEBUG'\"";
done


# Disabling extensive logging at master and workers
docker exec -i qserv-6 bash -c "sed -i 's/^log4j.rootLogger=INFO, CONSOLE/log4j.rootLogger=ERROR, CONSOLE/' /qserv/run/etc/log4cxx.czar.properties";
docker exec -i qserv-6 bash -c "cat /qserv/run/etc/log4cxx.czar.properties";
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/^log4j.rootLogger=DEBUG, CONSOLE/log4j.rootLogger=ERROR, CONSOLE/' /qserv/run/etc/log4cxx.worker.properties\"";
done
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"cat /qserv/run/etc/log4cxx.worker.properties\"";
done

# Enable more tracing at workers
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/    ssi.trace all debug/    ssi.trace all debug\n    xrootd.trace fs request response/' /qserv/run/etc/lsp.cf\"";
    ssh -n $h "docker exec -i qserv-6 bash -c \"cat /qserv/run/etc/lsp.cf | egrep 'trace|debug'\"";
done



# Enable SSI debug messages in the LSST Logger
# log4j.logger.lsst.qserv.xrdssi.msgs=ERROR
docker exec -i qserv-6 bash -c "sed -i 's/^log4j.logger.lsst.qserv.xrdssi.msgs=ERROR/log4j.logger.lsst.qserv.xrdssi.msgs=INFO/' /qserv/run/etc/log4cxx.czar.properties";
docker exec -i qserv-6 bash -c "cat /qserv/run/etc/log4cxx.czar.properties | grep 'log4j.logger.lsst.qserv.xrdssi.msgs'";
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/^log4j.logger.lsst.qserv.xrdssi.msgs=ERROR/log4j.logger.lsst.qserv.xrdssi.msgs=INFO/' /qserv/run/etc/log4cxx.worker.properties\"";
done
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"cat /qserv/run/etc/log4cxx.worker.properties | grep 'log4j.logger.lsst.qserv.xrdssi.msgs'\"";
done



# Deleting master and worker log files of the 'dev' instance
\sudo -u qserv rm -vf /qserv/qserv-dev/log/*.log;
\sudo -u qserv rm -vf /qserv/qserv-dev/log/master/*.log;
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    ssh -n ${h} '\sudo -u qserv rm -vf /qserv/qserv-dev/log/*.log; \sudo -u qserv rm -vf /qserv/qserv-dev/log/worker/*.log'&
done; wait

# Increasing the connection limit in MySQL
mysql --protocol=tcp -h127.0.0.1 -uroot -pCHANGEME -P3306 -e "SET GLOBAL max_connections=8192";
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    ssh -n $h 'source /datasets/gapon/stack/loadLSST.bash && setup -t qserv-dev qserv_distrib && mysql --protocol=tcp -h127.0.0.1 -uroot -pCHANGEME -P3306 -e "SET GLOBAL max_connections=8192"'&
done; wait

## Modify worker transmit parameters
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/^maxtransmits[ ]*=[ ]*[0-9]*/maxtransmits = 10/' /qserv/run/etc/xrdssi.cnf\"";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/^maxalreadytransmitting[ ]*=[ ]*[0-9]*/maxalreadytransmitting = 2/' /qserv/run/etc/xrdssi.cnf\"";
    ssh -n $h "docker exec -i qserv-6 bash -c \"cat /qserv/run/etc/xrdssi.cnf | egrep '^maxtransmits|^maxalreadytransmitting|^maxsqlconn'\"";
done

## Modify worker's SQL limits
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"sed -i 's/^maxsqlconn[ ]*=[ ]*[0-9]*/maxsqlconn = 50/' /qserv/run/etc/xrdssi.cnf\"";
    ssh -n $h "docker exec -i qserv-6 bash -c \"cat /qserv/run/etc/xrdssi.cnf | egrep '^maxtransmits|^maxalreadytransmitting|^maxsqlconn'\"";
done

## Restarting master and worker services
docker exec -it qserv-6 run/etc/init.d/mysql-proxy restart;
docker exec -it qserv-6 run/etc/init.d/xrootd restart;
for h in $(seq --format="qserv-db%02.0f" 1 6); do
    echo; echo "** $h **";
    ssh -n $h "docker exec -i qserv-6 bash -c \"/qserv/run/etc/init.d/xrootd restart\"";
done

