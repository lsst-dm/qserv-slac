#!/bin/bash

# Remove core dump files of the select services

set -e

# Load parameters of the setup into the corresponding environment
# variables

. $(dirname "$0")/config/env

function core_files_rm {
    local HOST=$1
    local CONTAINER_NAME=$2
    local MSG=$3
    local CORE_FILES_DIR=${CORE_FILES_BASE_DIR}/${CONTAINER_NAME}
    echo "[${HOST}]: ${MSG}" > /dev/tty
    ssh -n $HOST 'sudo -u qserv rm -vf '"${CORE_FILES_DIR}/core.*" 2>/dev/null | awk '{print "  "$0}' > /dev/tty
}

if [ -n "${CZAR_CMSD}" ]; then
  core_files_rm ${MASTER} ${CZAR_CMSD_CONTAINER_NAME} "qserv czar cmsd"
fi
if [ -n "${CZAR_XROOTD}" ]; then
  core_files_rm ${MASTER} ${CZAR_XROOTD_CONTAINER_NAME} "qserv czar xrootd"
fi
if [ -n "${CZAR_PROXY}" ]; then
  core_files_rm ${MASTER} ${CZAR_PROXY_CONTAINER_NAME} "qserv czar proxy"
fi
if [ -n "${REPL_CONTR}" ]; then
  core_files_rm ${MASTER} ${REPL_CONTR_CONTAINER_NAME} "repl contr"
fi
for WORKER in $WORKERS; do
  if [ -n "${WORKER_CMSD}" ]; then
    core_files_rm ${WORKER} ${WORKER_CMSD_CONTAINER_NAME} "qserv worker cmsd"
  fi
  if [ -n "${WORKER_XROOTD}" ]; then
    core_files_rm ${WORKER} ${WORKER_XROOTD_CONTAINER_NAME} "qserv worker xrootd"
  fi
  if [ -n "${REPL_WORKER}" ]; then
    core_files_rm ${WORKER} ${REPL_WORKER_CONTAINER_NAME} "repl worker"
  fi
done
